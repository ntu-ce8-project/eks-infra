name: Create and Bootstrap Cluster

on:
  workflow_dispatch:
    # The maximum number of top-level properties for inputs is 10. https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      nginx-ingress:
        description: "Nginx Ingress Controller?"
        type: boolean
        default: true
        required: true

      external-dns:
        description: "External DNS?"
        type: boolean
        default: true
        required: true

      cert-manager:
        description: "Cert Manager?"
        type: boolean
        default: true
        required: true
      
      monitoring:
        description: "Prometheus and Grafana?"
        type: boolean
        default: true
        required: true

      logging:
        description: "Loki?"
        type: boolean
        default: false
        required: true
      
      argocd:
        description: "ArgoCD?"
        type: boolean
        default: false
        required: true

permissions:  
  id-token: write       # Required for OIDC
  contents: read        # To read repo content

env:
  region: "ap-southeast-1"

jobs:
  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    outputs:
      cluster_name: ${{ steps.tfout.outputs.CLUSTER_NAME }}
      external_dns_role_arn: ${{ steps.tfout.outputs.EXTERNAL_DNS_ROLE_ARN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ env.region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
        
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/eks-cluster

      - name: Terraform Plan
        working-directory: ./terraform/eks-cluster
        env:
          TF_VAR_region: ${{ env.region }}
        run: terraform plan
        
      - name: Terraform Apply
        working-directory: ./terraform/eks-cluster
        env:
          TF_VAR_region: ${{ env.region }}
        run: terraform apply -auto-approve

      - name: Export terraform outputs
        working-directory: ./terraform/eks-cluster
        id: tfout
        run: |
          echo "CLUSTER_NAME=$(terraform output -raw cluster_name)" >> $GITHUB_OUTPUT
          echo "EXTERNAL_DNS_ROLE_ARN=$(terraform output -json external_dns_role_arn | jq -r '.[0]')" >> $GITHUB_OUTPUT

  bootstrap:
    name: Helm Bootstrap
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ env.region }}
      
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ needs.deploy.outputs.cluster_name }}

      - name: Deploy Nginx Ingress Controller
        if: ${{ github.event.inputs.nginx-ingress }}
        run: |
          cd addons/nginx-ingress
          chmod +x init.sh
          ./init.sh

      - name: Deploy ExternalDNS for Route53
        if: ${{ github.event.inputs.external-dns }}
        env:
          REGION: ${{ env.region }}
          EXTERNAL_DNS_ROLE_ARN: ${{ needs.deploy.outputs.external_dns_role_arn }}
        run: |
          cd addons/r53-externaldns
          envsubst < values.yaml > values.tmp && mv values.tmp values.yaml
          chmod +x init.sh
          ./init.sh

      - name: Deploy Cert Manager
        if: ${{ github.event.inputs.cert-manager }}
        env:
          EMAIL: ${{ secrets.EMAIL_ADDRESS }}
        run: |
          cd addons/cert-manager
          chmod +x init.sh
          ./init.sh
          envsubst < cluster-issuer.yaml | kubectl apply -f -

      - name: Deploy Prometheus and Grafana
        if: ${{ github.event.inputs.monitoring }}
        run: |
          cd addons/kube-prometheus-stack
          chmod +x init.sh
          ./init.sh

      - name: Deploy Loki
        if: ${{ github.event.inputs.logging }}
        run: |
          cd addons/loki
          chmod +x init.sh
          ./init.sh
      
      - name: Deploy ArgoCD
        if: ${{ github.event.inputs.argocd }}
        run: |
          cd addons/argocd
          chmod +x init.sh
          ./init.sh